h1. About

Experimental new data transformation workflows for the lobid-organisations data set based on "Metafacture":https://github.com/culturegraph/metafacture-core/wiki.

_Note: for the currently productive transformations see "https://github.com/lobid/lodmill":https://github.com/lobid/lodmill_

h1. Build

Prerequisites: Java 8, Maven 3; Build: @mvn clean install@

See the @.travis.yml@ file for details on the CI config used by Travis.

"!https://secure.travis-ci.org/hbz/lobid-organisations.png?branch=master!":https://travis-ci.org/hbz/lobid-organisations

h1. Tests

The build described above executes tests of the Metamorph transformations.

These tests are defined in XML files with a @test_@ prefix corresponding to the tested Metamorph files:

in @src/main/resources@:

@morph-dbs.xml@
@morph-enriched.xml@
@morph-sigel.xml@

in @src/test/resources@:

@test_morph-dbs.xml@
@test_morph-enriched.xml@
@test_morph-sigel.xml@

For details, see the "Metamorph testing framework documentation":https://github.com/culturegraph/metafacture-core/wiki/Testing-Framework-for-Metamorph.

h1. Workflow

This project currently transforms two data sets into JSON for Elasticsearch indexing.

The source data sets are the _Sigelverzeichnis_ ('Sigel', format: PicaPlus-XML) and the _Deutsche Bibliotheksstatistik_ ('DBS', format: CSV).

The transformation is implemented by a pipeline with 3 logical steps:

* Preprocess Sigel data, use DBS ID as record ID
* Preprocess DBS data, use DBS ID as record ID
* Enrich the DBS data with transformed Sigel data

Each of these steps has a corresponding Java class, Morph definition, and output file.

h1. Data

Get the input data (hbz internal):

* @cd src/main/resources/input/@
* @wget http://quaoar1.hbz-nrw.de:7001/assets/data/dbs.zip; unzip dbs.zip@
* @wget http://quaoar1.hbz-nrw.de:7001/assets/data/sigel.zip; unzip sigel.zip@

In the project root, run the transformation and change into the output directory:

* @mvn exec:java -Dexec.mainClass="flow.Enrich"; cd src/main/resources/output/@

Import the data into Elasticsearch:

* @curl -s -XPOST http://quaoar2.hbz-nrw.de:9200/_bulk --data-binary @enriched.out.json; echo@

Query the resulting index:

* @curl -XGET 'http://quaoar2.hbz-nrw.de:9200/dbs/_search?q=name:hbz+OR+altLabel:hbz'; echo@

For details see the "query string syntax documentation":http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-string-syntax and general "Elasticsearch API documentation":http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/index.html.

h1. License

Eclipse Public License: "http://www.eclipse.org/legal/epl-v10.html":http://www.eclipse.org/legal/epl-v10.html